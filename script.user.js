// ==UserScript==
// @name         AutoPilot —Å —Ñ–∏–ª—å—Ç—Ä–æ–º –ø–æ –≥–∞–±–∞—Ä–∏—Ç–∞–º –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü
// @namespace    http://tampermonkey.net/
// @version      1.6
// @description  –ò–º–ø–æ—Ä—Ç –∫–∞—Ä—Ç–æ—á–µ–∫ —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π –≥–∞–±–∞—Ä–∏—Ç–æ–≤ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–∞–∂–¥—ã–µ 3 –±–ª–æ–∫–∞ –∏–º–ø–æ—Ä—Ç–∞.
// @author       KeepDistance
// @match        https://sellerpilot.ru/catalog-v2*
// @updateURL    https://github.com/KeepDistanceWW/AutoPilot/raw/refs/heads/main/script.user.js
// @downloadURL  https://github.com/KeepDistanceWW/AutoPilot/raw/refs/heads/main/script.user.js
// @grant        none
// ==/UserScript==
///VLAD LOX
(function () {
  'use strict';

  const BLOCK_REPEAT_COUNT = 200;
  const IMPORTS_PER_BLOCK = 15;
  const LONG_PAUSE_MS = 2 * 60 * 1000;
  const MIN_DELAY = 400;
  const MAX_DELAY = 800;

  const MAX_LENGTH = 100;
  const MAX_WIDTH = 50;
  const MAX_HEIGHT = 40;
  const MAX_WEIGHT = 9.4;

  const delay = (ms) => new Promise(res => setTimeout(res, ms));
  const humanDelay = () => delay(MIN_DELAY + Math.random() * (MAX_DELAY - MIN_DELAY));
  const getImportButtons = () => Array.from(document.querySelectorAll('vaadin-button[theme~="icon"]'));

  const getValueFromModalField = (labelText) => {
    const label = Array.from(document.querySelectorAll('label')).find(l => l.textContent.includes(labelText));
    if (!label) return 0;
    const inputId = label.getAttribute('for');
    const input = inputId ? document.getElementById(inputId) : null;
    return input ? parseFloat(input.value.replace(',', '.')) || 0 : 0;
  };

  const getDimensionsFromModal = () => {
    return {
      length: getValueFromModalField('–î–ª–∏–Ω–∞'),
      width: getValueFromModalField('–®–∏—Ä–∏–Ω–∞'),
      height: getValueFromModalField('–í—ã—Å–æ—Ç–∞'),
      weight: getValueFromModalField('–í–µ—Å'),
    };
  };

  const isWithinLimits = ({ length, width, height, weight }) =>
    length <= MAX_LENGTH && width <= MAX_WIDTH && height <= MAX_HEIGHT && weight <= MAX_WEIGHT;

  const closeModal = () => {
    const overlay = document.querySelector('vaadin-dialog-overlay');
    if (overlay) {
      overlay.dispatchEvent(new MouseEvent('mousedown', { bubbles: true, cancelable: true }));
      overlay.dispatchEvent(new MouseEvent('mouseup', { bubbles: true, cancelable: true }));
      overlay.dispatchEvent(new MouseEvent('click', { bubbles: true, cancelable: true }));
      console.log('‚ùå –ò–º–ø–æ—Ä—Ç –æ—Ç–º–µ–Ω—ë–Ω ‚Äî –º–æ–¥–∞–ª–∫–∞ –∑–∞–∫—Ä—ã—Ç–∞ –∫–ª–∏–∫–æ–º –≤ –æ–±–ª–∞—Å—Ç—å');
    } else {
      console.warn('‚ö†Ô∏è –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
    }
  };

  const clickNextPage = () => {
    const nextBtn = Array.from(document.querySelectorAll('vaadin-button'))
      .find(btn => btn.querySelector('vaadin-icon[icon="vaadin:angle-right"]'));
    if (nextBtn) {
      nextBtn.click();
      console.log('‚û°Ô∏è –ü–µ—Ä–µ—à–ª–∏ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É');
    } else {
      console.warn('‚õî –ö–Ω–æ–ø–∫–∞ "–°–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    }
  };

  const clickPrevPage = () => {
    const prevBtn = Array.from(document.querySelectorAll('vaadin-button'))
      .find(btn => btn.querySelector('vaadin-icon[icon="vaadin:angle-left"]') && !btn.hasAttribute('disabled'));
    if (prevBtn) {
      prevBtn.click();
      console.log('‚¨ÖÔ∏è –í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É');
    } else {
      console.warn('‚õî –ö–Ω–æ–ø–∫–∞ "–ü—Ä–µ–¥—ã–¥—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∞');
    }
  };

  async function runAutomation() {
    console.log('‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ 15 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º...');
    await delay(15000);

    for (let block = 0; block < BLOCK_REPEAT_COUNT; block++) {
      console.log(`‚ñ∂Ô∏è –ë–ª–æ–∫ ${block + 1} –∏–∑ ${BLOCK_REPEAT_COUNT}`);

      let importedThisBlock = 0;
      let btnIndex = 0;

      while (importedThisBlock < IMPORTS_PER_BLOCK) {
        const buttons = getImportButtons();
        const button = buttons[btnIndex];
        if (!button) {
          console.warn(`‚õî –ö–Ω–æ–ø–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ #${btnIndex + 1} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞`);
          break;
        }

        // –†–∞–Ω–¥–æ–º–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –∫–ª–∏–∫–æ–º
        const importDelay = 1000 + Math.random() * 2000;
        console.log(`‚è≥ –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –∏–º–ø–æ—Ä—Ç–æ–º: ${Math.round(importDelay)} –º—Å`);
        await delay(importDelay);

        button.click();
        console.log(`üñ±Ô∏è –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –∏–º–ø–æ—Ä—Ç–∞ #${btnIndex + 1}`);
        await delay(1500); // –≤—Ä–µ–º—è –Ω–∞ –æ—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        await humanDelay();

        const dims = getDimensionsFromModal();
        console.log(`üì¶ –ì–∞–±–∞—Ä–∏—Ç—ã: –î=${dims.length}, –®=${dims.width}, –í=${dims.height}, –í–µ—Å=${dims.weight}`);

        if (!isWithinLimits(dims)) {
          closeModal();
          await delay(1500); // –≤—Ä–µ–º—è –Ω–∞ –∑–∞–∫—Ä—ã—Ç–∏–µ
          btnIndex++;
          continue;
        }

        const confirmButtons = Array.from(document.querySelectorAll('vaadin-button'));
        const confirmBtn = confirmButtons.find(btn => btn.textContent.trim() === '–ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å');

        if (confirmBtn) {
          confirmBtn.click();
          console.log('‚úÖ –ò–º–ø–æ—Ä—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω');
          importedThisBlock++;
          await delay(2000);
        } else {
          console.warn('‚ö†Ô∏è –ö–Ω–æ–ø–∫–∞ "–ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        }

        await humanDelay();
        btnIndex++;
      }

      // –ü–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ —Ç—Ä–µ—Ç—å–µ–≥–æ –±–ª–æ–∫–∞ –æ–±–Ω–æ–≤–ª—è–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏
      if ((block + 1) % 3 === 0) {
        console.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–µ–∫ —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü...');
        clickNextPage();
        await delay(5000);
        clickPrevPage();
        await delay(5000);
      }

      console.log(`‚è∏Ô∏è –ë–ª–æ–∫ ${block + 1} –∑–∞–≤–µ—Ä—à—ë–Ω. –ü–∞—É–∑–∞ 2 –º–∏–Ω—É—Ç—ã...`);
      await delay(LONG_PAUSE_MS);
    }

    console.log(`üèÅ –ò–º–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à—ë–Ω. –í—Å–µ–≥–æ –∫–∞—Ä—Ç–æ—á–µ–∫: ${BLOCK_REPEAT_COUNT * IMPORTS_PER_BLOCK}`);
  }

  window.addEventListener('load', () => {
    setTimeout(runAutomation, 200);
  });
})();
